<%
require 'net/http'
require 'rexml/document'

url = 'http://www.google.com/calendar/feeds/eighty.thousand%40gmail.com/public/full?' + @gcal_params

xml_data = Net::HTTP.get_response(URI.parse(url)).body

doc = REXML::Document.new( xml_data )

titles = []
content = []
where = []
startTimes= []
endTimes = []
doc.elements.each('feed/entry/title'){ |e| titles << e.text }
doc.elements.each('feed/entry/content'){ |e| content << e.text }
doc.elements.each('feed/entry/gd:where'){ |e| where << e.attributes['valueString'] }
doc.elements.each('feed/entry/gd:when') do |e|
  startTimes << DateTime.parse(e.attributes['startTime'])
  endTimes << DateTime.parse(e.attributes['endTime'])
end


# all the arrays are ordered with closest event last, let's reverse them
titles = titles.reverse
content = content.reverse
where = where.reverse
startTimes = startTimes.reverse
endTimes = endTimes.reverse

%>

<%# xml_data %>

<% if titles.size > 0 %>
  <% titles.each_with_index do |title, idx| %>
    <div class="event">
      <h1><%= raw title %></h1>
      <h2><%= raw where[idx] %>, <%= format_date_with_day(startTimes[idx])%></h2>
      <%= markdown content[idx] %>
      <p><strong>When:</strong> <%= format_date_with_day(startTimes[idx]) + startTimes[idx].strftime(", %H:%M")  + endTimes[idx].strftime(" - %H:%M") %></p>
      <p><strong>Where:</strong> <%= raw where[idx] %></p>
    </div>
  <% end %>
<% else %>
  <div class="box event">
    We currently have no events scheduled. Check back soon!
  </div>
<% end %>

<div class="center large_margin">
  <% if @title == "Past events" %>
    <%= button_link 'Back to forthcoming events', '/events' %>
  <% else %>
    <%= button_link 'Looking for past events?', '/events/past-events' %>
  <% end %>
</div>
